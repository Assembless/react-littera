{"version":3,"file":"index.modern.js","sources":["../src/core/translate.ts","../src/react/service.tsx","../src/utils/helpers.ts","../src/react/hooks.ts"],"sourcesContent":["import { LitteraTranslated, LitteraTranslations } from '../typings'\r\n\r\n/**\r\n * Reduces a translations object, returning translations for the specified locale.\r\n * @category core\r\n * @param translations The translations object.\r\n * @param locale The locale to return.\r\n */\r\nexport const translate = <T, K extends keyof T>(\r\n  translations: LitteraTranslations<T>,\r\n  locale: string\r\n): LitteraTranslated<T, K> => translations[locale] ?? {}\r\n","import * as React from 'react'\r\nimport { translate } from '../core/translate'\r\nimport { LitteraContextValue, LitteraTranslations } from '../typings'\r\n\r\nexport const LitteraContext = React.createContext<LitteraContextValue<any>>({\r\n  locale: 'en_US',\r\n  locales: ['en_US'],\r\n  setLocale: () => {},\r\n  translate: <T, K extends keyof T>(\r\n    translations: LitteraTranslations<T>,\r\n    locale?: string\r\n  ) => translate<T, K>(translations, locale ?? 'en_US'),\r\n  preset: {}\r\n})\r\n\r\n/**\r\n * Context Provider for Littera\r\n * @category React\r\n * @public\r\n * @param initialLocale Initial active locale.\r\n * @param preset Set of predefined translations.\r\n * @param setLocale Callback called when the locale changes.\r\n * @param pattern Locale pattern.\r\n * @example\r\n * // Setting up Littera provider.\r\n *\r\n * const App = () => {\r\n *    return <LitteraService locales={[\"en_US\", \"de_DE\"]}>\r\n *      ...\r\n *    </LitteraService>\r\n * }\r\n */\r\nexport const LitteraService = function <T extends ReadonlyArray<unknown>>({\r\n  children,\r\n  initialLocale,\r\n  locales,\r\n  preset = {}\r\n}: {\r\n  children: any\r\n  initialLocale: T[number]\r\n  locales: T\r\n  preset: LitteraTranslations<unknown>\r\n}) {\r\n  const [locale, setLocale] = React.useState(\r\n    initialLocale ?? locales[0] ?? 'en_US'\r\n  )\r\n\r\n  return (\r\n    <LitteraContext.Provider\r\n      value={{ locale, setLocale, locales, preset } as LitteraContextValue<T>}\r\n    >\r\n      {children}\r\n    </LitteraContext.Provider>\r\n  )\r\n}\r\n","import { LitteraTranslations } from '../typings'\r\n\r\n/**\r\n * Throws an error if the given locale is not contained in the list of locales.\r\n * @param locales The list of locales.\r\n * @param locale The locale to check.\r\n * @returns True if the locale is contained, throw error otherwise.\r\n */\r\nexport const throwInvalidLocale = (locales: string[], locale: string) => {\r\n  if (!locales.includes(locale))\r\n    throw new Error(\r\n      `Invalid locale provided. Expected [${locales.join(', ')}], got ${locale}`\r\n    )\r\n\r\n  return true\r\n}\r\n\r\n/**\r\n * Compares translations for each locale and warns about missing.\r\n * Disabled for 'production' environment.\r\n * @param translations The translations object.\r\n */\r\nexport const warnMissingTranslations = <T>(\r\n  translations: LitteraTranslations<T>\r\n) => {\r\n  if (process.env.NODE_ENV === 'production') return\r\n\r\n  const keys: string[] = []\r\n  Object.keys(translations).forEach((locale) => {\r\n    Object.keys(translations[locale]).forEach((key) => {\r\n      if (!keys.includes(key)) keys.push(key)\r\n    })\r\n\r\n    keys.forEach((key) => {\r\n      // console.warn if key is missing in a locale.\r\n      if (!Object.keys(translations[locale]).includes(key)) {\r\n        console.warn(`Key ${key} is missing in locale ${locale}`)\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * Simple object check.\r\n * @param item\r\n * @returns {boolean}\r\n */\r\nexport function isObject(item: any) {\r\n  return item && typeof item === 'object' && !Array.isArray(item)\r\n}\r\n\r\n/**\r\n * Deep merge two objects.\r\n * @param target\r\n * @param ...sources\r\n */\r\nexport function deepMerge(target: any, ...sources: any[]): any {\r\n  if (!sources.length) return target\r\n  const source = sources.shift()\r\n\r\n  if (isObject(target) && isObject(source)) {\r\n    for (const key in source) {\r\n      if (isObject(source[key])) {\r\n        if (!target[key]) Object.assign(target, { [key]: {} })\r\n        deepMerge(target[key], source[key])\r\n      } else {\r\n        Object.assign(target, { [key]: source[key] })\r\n      }\r\n    }\r\n  }\r\n\r\n  return deepMerge(target, ...sources)\r\n}\r\n","import * as React from 'react'\r\nimport { LitteraContext } from './service'\r\nimport { translate } from '..'\r\nimport {\r\n  deepMerge,\r\n  throwInvalidLocale,\r\n  warnMissingTranslations\r\n} from '../utils/helpers'\r\nimport { LitteraTranslated, LitteraTranslations } from '../typings'\r\n\r\n/**\r\n * Method accepting translations object and returning a React hook.\r\n * @param translations\r\n * @returns A React hook used to retrieve the translations.\r\n * @example\r\n * const translations = {\r\n *  'en_US': {\r\n *    'hello': 'Hello',\r\n *    'world': 'World'\r\n *  },\r\n *  'fr_FR': {\r\n *    'hello': 'Bonjour',\r\n *    'world': 'Monde'\r\n *  }\r\n * };\r\n * const useLittera = makeTranslations(translations);\r\n *\r\n * const Component () => {\r\n *  const translated = useLittera();\r\n *\r\n *  return <div>\r\n *    <h1>{translated.hello}</h1>\r\n *    <h2>{translated.world}</h2>\r\n *  </div>\r\n * }\r\n */\r\nexport const makeTranslations = <T, K extends keyof T>(\r\n  translations: LitteraTranslations<T>\r\n): ((locale?: string) => LitteraTranslated<T, K>) => {\r\n  warnMissingTranslations(translations)\r\n\r\n  return (locale?: string) => {\r\n    const service = React.useContext(LitteraContext)\r\n\r\n    const translationsWithPreset = React.useMemo(\r\n      () => deepMerge(service.preset, translations),\r\n      [service.locale]\r\n    ) as LitteraTranslations<T>\r\n\r\n    return useLittera<T, K>(translationsWithPreset, locale)\r\n  }\r\n}\r\n\r\n/**\r\n * @description React hook for translating a component.\r\n * @category React\r\n * @param translations\r\n * @param locale Optional locale to translate to. Defaults to the current locale.\r\n * @returns The translations object for the specified locale.\r\n */\r\nexport const useLittera = <T, K extends keyof T>(\r\n  translations: LitteraTranslations<T>,\r\n  locale?: string\r\n): LitteraTranslated<T, K> => {\r\n  const service = React.useContext(LitteraContext)\r\n  const currentLocale = locale ?? service.locale\r\n\r\n  React.useEffect(() => {\r\n    if (locale) throwInvalidLocale(service.locales, locale)\r\n  }, [locale])\r\n\r\n  return React.useMemo(\r\n    () => translate<T, K>(translations, currentLocale),\r\n    [currentLocale]\r\n  )\r\n}\r\n\r\ntype LitteraMethodsReturn = {\r\n  readonly locale: string\r\n  readonly locales: string[]\r\n  readonly setLocale: (locale: string) => void\r\n  readonly translate: <T, K extends keyof T>(\r\n    translations: LitteraTranslations<T>,\r\n    locale?: string\r\n  ) => LitteraTranslated<T, K>\r\n}\r\n\r\n/**\r\n * @description React hook exposing methods for current context.\r\n * @category React\r\n */\r\nexport const useLitteraMethods = () => {\r\n  const { setLocale, locale, locales } = React.useContext(LitteraContext)\r\n\r\n  const handleLocaleChange = React.useCallback(\r\n    (nextLocale: string) => {\r\n      throwInvalidLocale(locales, nextLocale)\r\n\r\n      setLocale(nextLocale)\r\n    },\r\n    [setLocale]\r\n  )\r\n\r\n  const translateFn = <T, K extends keyof T>(\r\n    translations: LitteraTranslations<T>,\r\n    overrideLocale?: string\r\n  ) => {\r\n    const currentLocale = overrideLocale ?? locale ?? locales[0]\r\n\r\n    return translate<T, K>(translations, currentLocale)\r\n  }\r\n\r\n  return React.useMemo<LitteraMethodsReturn>(\r\n    () => ({\r\n      setLocale: handleLocaleChange,\r\n      locale,\r\n      locales,\r\n      translate: translateFn\r\n    }),\r\n    [locale]\r\n  )\r\n}\r\n"],"names":["translate","translations","locale","LitteraContext","React","locales","setLocale","preset","LitteraService","children","initialLocale","Provider","value","throwInvalidLocale","includes","Error","join","warnMissingTranslations","process","env","NODE_ENV","keys","Object","forEach","key","push","console","warn","isObject","item","Array","isArray","deepMerge","target","sources","length","source","shift","assign","makeTranslations","service","translationsWithPreset","useLittera","currentLocale","useLitteraMethods","handleLocaleChange","nextLocale","translateFn","overrideLocale"],"mappings":"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"}